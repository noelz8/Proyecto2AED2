#ifndef AI_PLAYER_H
#define AI_PLAYER_H

#include "Player.h"

#include <unordered_map>

class Board;

/**
 * Responsible for the checkers artifical intelligence.
 * 
 * @author Mckenna Cisler 
 * @version 5.18.2016
 */
class AIPlayer : public Player
{
    private:
    	bool isWhite;
    	
    	/**
		 * Returns a key in a hashmap that correpsonds to the given value
		 * @param map The map to search in
		 * @param value The value to search for

		 * @return Returns the key found in the map, may be null if not found
		 */
		template <class T, class E>
		T getKeyByValue(std::unordered_map<T, E> map, E value);
    
    public:
		/**
		 * Constructor for the AIPlayer.
 		 * @param isWhite Used to specify if this "player" is black or white.
		 */
		AIPlayer(bool isWhite) : isWhite(isWhite) {};

		/**
		 * Gets a move, generated by the AI.
		 * @param board The board to apply the move to
		 * @return Returns the board, modified according to the computer's move
		 */
		virtual void getMove(Board& board);
};

#endif
